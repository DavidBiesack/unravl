{
  "name" : "GoogleEverestElevation",
  "GET" : "http://maps.googleapis.com/maps/api/elevation/json?locations=27.988056,86.925278&sensor=false",
    "bind" : [
     { "json": "responseBody" },
     { "pattern" : ["{responseBody}", ".*\"lat\"\\s*:\\s*([^,}]+)[,}].*", "lat" ] },
     { "pattern" : ["{responseBody}", ".*\"lng\"\\s*:\\s*([^,}]+)[,}].*", "lng" ] },
     { "pattern" : ["{responseBody}", ".*\"elevation\"\\s*:\\s*([^,}]+)[,}].*", "elevation" ] },
     { "headers" : { "responseType" : [ "Content-Type", "^(.*)\\s*;\\s*charset=(.*)$", "mediaType", "charset" ] }
     }
  ],
  "assert": [
    { "status" : 200 },
    { "groovy" : "status == 200" },
    { "ignore" : { "json" : "@benchmark.json" } },
    { "doc" :  ["use UnRAVL var notation such as {lat} to inject the value of lat  (which is a string, not a double).",
                "If we just called assertEquals(lat, ...), Groovy would be unable to find a method match for assertEquals(String,BigDecimal,BigDecimal)",
                "By using {lat} the Groovy expression has the double literal assertEquals(27.988056, ...) and can match the method" ] },
    "{lat} > 27.98 && {lat} < 27.99",
    "{lng} > 86.925 && {lng} < 86.93",
    "{elevation} > 8815.715 && {elevation} < 8815.72",
    { "headers" : { "Content-Type" : "application/json; *charset=UTF-8" } }
    ]
}
